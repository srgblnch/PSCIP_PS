static const char *RcsId = "$Header:  $";
//+=============================================================================
//
// file :         PSI_PCStateMachine.cpp
//
// description :  C++ source for the PSI_PC and its alowed.
//                method for commands and attributes
//
// project :      TANGO Device Server
//
// $Author:  $
//
// $Revision:  $
//
// $Log:  $
//
// copyleft :     European Synchrotron Radiation Facility
//                BP 220, Grenoble 38043
//                FRANCE
//
//-=============================================================================
//
//              This file is generated by POGO
//      (Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================

#include <tango.h>
#include <PSI_PC.h>
#include <PSI_PCClass.h>

/*====================================================================
 *      This file contains the methods to allow commands and attributes
 * read or write execution.
 *
 * If you wand to add your own code, add it between
 * the "End/Re-Start of Generated Code" comments.
 *
 * If you want, you can also add your own methods.
 *====================================================================
 */

namespace PSI_PC_ns
{

//=================================================
//              Attributes Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_CurrentSetpoint_allowed
//
// description :        Read/Write allowed for CurrentSetpoint attribute.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_CurrentSetpoint_allowed(Tango::AttReqType type)
{
                //      End of Generated Code

                //      Re-Start of Generated Code
        return true;
}
//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_I_allowed
//
// description :        Read/Write allowed for I attribute.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_I_allowed(Tango::AttReqType type)
{
                //      End of Generated Code

                //      Re-Start of Generated Code
        return true;
}
//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_Voltage_allowed
//
// description :        Read/Write allowed for Voltage attribute.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_Voltage_allowed(Tango::AttReqType type)
{
        if (get_state() == Tango::UNKNOWN       ||
                get_state() == Tango::INIT)
        {
                //      End of Generated Code

                //      Re-Start of Generated Code
                return false;
        }
        return true;
}

//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_ErrorLabel_allowed
//
// description :        Read/Write allowed for ErrorLabel attribute.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_ErrorLabel_allowed(Tango::AttReqType type)
{
                //      End of Generated Code

                //      Re-Start of Generated Code
        return true;
}
//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_RemoteMode_allowed
//
// description :        Read/Write allowed for RemoteMode attribute.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_RemoteMode_allowed(Tango::AttReqType type)
{
                //      End of Generated Code

                //      Re-Start of Generated Code
        return true;
}
//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_Current_allowed
//
// description :        Read/Write allowed for Current attribute.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_Current_allowed(Tango::AttReqType type)
{
        if (get_state() == Tango::UNKNOWN       ||
                get_state() == Tango::INIT)
        {
                //      End of Generated Code

                //      Re-Start of Generated Code
                return false;
        }
        return true;
}
//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_CurrentOffset_allowed
//
// description :        Read/Write allowed for CurrentOffset attribute.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_CurrentOffset_allowed(Tango::AttReqType type)
{
        if (get_state() == Tango::UNKNOWN       ||
                get_state() == Tango::INIT)
        {
                //      End of Generated Code

                //      Re-Start of Generated Code
                return false;
        }
        return true;
}
//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_ErrorCodes_allowed
//
// description :        Read/Write allowed for ErrorCodes attribute.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_ErrorCodes_allowed(Tango::AttReqType type)
{
                //      End of Generated Code

                //      Re-Start of Generated Code
        return true;
}
//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_Errors_allowed
//
// description :        Read/Write allowed for Errors attribute.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_Errors_allowed(Tango::AttReqType type)
{
                //      End of Generated Code

                //      Re-Start of Generated Code
        return true;
}
//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_SoftwareWaveform_allowed
//
// description :        Read/Write allowed for SoftwareWaveform attribute.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_SoftwareWaveform_allowed(Tango::AttReqType type)
{
                //      End of Generated Code

                //      Re-Start of Generated Code
        return true;
}

//=================================================
//              Commands Allowed Methods
//=================================================

//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_On_allowed
//
// description :        Execution allowed for On command.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_On_allowed(const CORBA::Any &any)
{
        if (get_state() == Tango::MOVING)
        {
                //      End of Generated Code

                //      Re-Start of Generated Code
                return false;
        }
        return true;
}
//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_Off_allowed
//
// description :        Execution allowed for Off command.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_Off_allowed(const CORBA::Any &any)
{
        if (get_state() == Tango::MOVING)
        {
                //      End of Generated Code

                //      Re-Start of Generated Code
                return false;
        }
        return true;
}
//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_Reset_allowed
//
// description :        Execution allowed for Reset command.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_Reset_allowed(const CORBA::Any &any)
{
        if (get_state() == Tango::MOVING)
        {
                //      End of Generated Code

                //      Re-Start of Generated Code
                return false;
        }
        return true;
}

//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_Read_PSC_register_allowed
//
// description :        Execution allowed for Read_PSC_register command.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_Read_PSC_register_allowed(const CORBA::Any &any)
{
        if (get_state() == Tango::MOVING)
        {
                //      End of Generated Code

                //      Re-Start of Generated Code
                return false;
        }
        return true;
}
//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_StopSoftwareWaveform_allowed
//
// description :        Execution allowed for StopSoftwareWaveform command.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_StopSoftwareWaveform_allowed(const CORBA::Any &any)
{
        if (get_state() == Tango::UNKNOWN       ||
                get_state() == Tango::INIT      ||
                get_state() == Tango::ON        ||
                get_state() == Tango::OFF       ||
                get_state() == Tango::ALARM     ||
                get_state() == Tango::FAULT     ||
                get_state() == Tango::RUNNING)
        {
                //      End of Generated Code

                //      Re-Start of Generated Code
                return false;
        }
        return true;
}
//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_StartSoftwareWaveform_allowed
//
// description :        Execution allowed for StartSoftwareWaveform command.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_StartSoftwareWaveform_allowed(const CORBA::Any &any)
{
        if (get_state() == Tango::UNKNOWN       ||
                get_state() == Tango::INIT      ||
                get_state() == Tango::OFF       ||
                get_state() == Tango::ALARM     ||
                get_state() == Tango::FAULT     ||
                get_state() == Tango::RUNNING   ||
                get_state() == Tango::MOVING)
        {
                //      End of Generated Code

                //      Re-Start of Generated Code
                return false;
        }
        return true;
}
//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_ResetInterlocks_allowed
//
// description :        Execution allowed for ResetInterlocks command.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_ResetInterlocks_allowed(const CORBA::Any &any)
{
        if (get_state() == Tango::MOVING)
        {
                //      End of Generated Code

                //      Re-Start of Generated Code
                return false;
        }
        return true;
}
//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_DisableInterlocks_allowed
//
// description :        Execution allowed for DisableInterlocks command.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_DisableInterlocks_allowed(const CORBA::Any &any)
{
        if (get_state() == Tango::UNKNOWN       ||
                get_state() == Tango::INIT      ||
                get_state() == Tango::ON        ||
                get_state() == Tango::RUNNING   ||
                get_state() == Tango::MOVING)
        {
                //      End of Generated Code

                //      Re-Start of Generated Code
                return false;
        }
        return true;
}
//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_EnableInterlocks_allowed
//
// description :        Execution allowed for EnableInterlocks command.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_EnableInterlocks_allowed(const CORBA::Any &any)
{
        if (get_state() == Tango::UNKNOWN       ||
                get_state() == Tango::INIT      ||
                get_state() == Tango::ON        ||
                get_state() == Tango::ALARM     ||
                get_state() == Tango::FAULT     ||
                get_state() == Tango::RUNNING   ||
                get_state() == Tango::MOVING)
        {
                //      End of Generated Code

                //      Re-Start of Generated Code
                return false;
        }
        return true;
}
//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_InterlockStatus_allowed
//
// description :        Execution allowed for InterlockStatus command.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_InterlockStatus_allowed(const CORBA::Any &any)
{
        if (get_state() == Tango::MOVING)
        {
                //      End of Generated Code

                //      Re-Start of Generated Code
                return false;
        }
        return true;
}
//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_Connect_allowed
//
// description :        Execution allowed for Connect command.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_Connect_allowed(const CORBA::Any &any)
{
                //      End of Generated Code

                //      Re-Start of Generated Code
        return true;
}

//+----------------------------------------------------------------------------
//
// method :             PSI_PC::is_Update_allowed
//
// description :        Execution allowed for Update command.
//
//-----------------------------------------------------------------------------
bool PSI_PC::is_Update_allowed(const CORBA::Any &any)
{
                //      End of Generated Code

                //      Re-Start of Generated Code
        return true;
}

}       // namespace PSI_PC_ns
